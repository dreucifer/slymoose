from flask import render_template
from flask.wtf import Form, TextField, PasswordField, validators
from flask.ext.login import LoginManager
from __init__ import app

login_manager = LoginManager()
login_manager.init_app(app)

class LoginForm(Form):
    username = TextField('Username', [validators.Required()])
    password = PasswordField('Password', [validators.Required()])

    def __init__(self, *args, **kwargs):
        Form.__init__(self, *args, **kwargs)
        self.user = None

    def validate(self):
        rv = Form.validate(self)
        if not rv:
            return False

        username = 'user'
        password = 'pass'
        if username is not self.username.data:
            self.username.errors.append('Wrong Username')
            return False

        if password is not self.password.data:
            self.password.errors.append('Wrong Password')
            return False
        

def goodrule(rule):
    return (len((rule.defaults or [])) >= len(rule.arguments))

def getlinks():
    rules = app.url_map.iter_rules()
    return sorted([rule for rule in rules if goodrule(rule)])

@app.route("/")
def index():
    return render_template(
        'index.html', links=getlinks(), title="SlyMoose")

@app.route("/games/")
def games():
    return render_template('page.html', links=getlinks())

@app.route("/images/")
def images():
    return render_template('page.html', links=getlinks())

@app.route("/videos/")
def videos():
    return render_template('page.html', links=getlinks())

@app.route("/login", methods=["GET", "POST"])
def login():
    form = LoginForm()
    if form.validate_on_submit():
        login_user(user)
        flash("Logged in successfully.")
        return redirect(request.args.get("next") or url_for("index"))
    return render_template("login.html", form=form)
